"use strict";(self.webpackChunkdevdocs=self.webpackChunkdevdocs||[]).push([[4886],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>p});var a=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function n(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,o=function(e,t){if(null==e)return{};var r,a,o={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=a.createContext({}),d=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):n(n({},t),e)),r},u=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var r=e.components,o=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),f=d(r),p=o,m=f["".concat(s,".").concat(p)]||f[p]||c[p]||l;return r?a.createElement(m,n(n({ref:t},u),{},{components:r})):a.createElement(m,n({ref:t},u))}));function p(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=r.length,n=new Array(l);n[0]=f;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,n[1]=i;for(var d=2;d<l;d++)n[d]=r[d];return a.createElement.apply(null,n)}return a.createElement.apply(null,r)}f.displayName="MDXCreateElement"},5435:(e,t,r)=>{r.r(t),r.d(t,{contentTitle:()=>n,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var a=r(7462),o=(r(7294),r(3905));const l={},n="Variables",i={unversionedId:"guides/workflows/variables",id:"guides/workflows/variables",isDocsHomePage:!1,title:"Variables",description:"All values entered in a form are stored in variables and can be displayed & edited with subsequent task forms. In this section, you will learn how to display those variables.",source:"@site/docs/guides/workflows/030_variables.md",sourceDirName:"guides/workflows",slug:"/guides/workflows/variables",permalink:"/docs/guides/workflows/variables",editUrl:"https://github.com/pipeforce/pipeforce.github.io/edit/master/docs/guides/workflows/030_variables.md",tags:[],version:"current",sidebarPosition:30,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Gateways",permalink:"/docs/guides/workflows/gateways"},next:{title:"Emails",permalink:"/docs/guides/workflows/emails"}},s=[{value:"Define form fields as workflow variables",id:"define-form-fields-as-workflow-variables",children:[],level:2},{value:"Display workflow variables",id:"display-workflow-variables",children:[],level:2},{value:"Make a variable read-only",id:"make-a-variable-read-only",children:[],level:2}],d={toc:s};function u(e){let{components:t,...l}=e;return(0,o.kt)("wrapper",(0,a.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"variables"},"Variables"),(0,o.kt)("p",null,"All values entered in a form are stored in variables and can be displayed & edited with subsequent task forms. In this section, you will learn how to display those variables."),(0,o.kt)("h2",{id:"define-form-fields-as-workflow-variables"},"Define form fields as workflow variables"),(0,o.kt)("p",null,"In case, you are defining form fields via the Online Workflow Modeler, like in the example below, all field IDs are directly stored as workflow variables. If you use those IDs in multiple steps in the workflow model, the content entered in previous steps are displayed automatically."),(0,o.kt)("p",null,"In case, you would like to use workflow variables from a trigger form, there are a few additional steps to do. These steps are described in this tutorial ",(0,o.kt)("a",{parentName:"p",href:"../../tutorials/create-bpmn-workflow"},"Tutorial: Create a new BPMN workflow"),", section 9 & 10."),(0,o.kt)("h2",{id:"display-workflow-variables"},"Display workflow variables"),(0,o.kt)("p",null,"To display values entered during the workflow in subsequent (task) forms, you can just create a field with an identical ID in the Online Workflow Modeler (e.g. taxRate)."),(0,o.kt)("p",null,(0,o.kt)("img",{src:r(9254).Z})),(0,o.kt)("h2",{id:"make-a-variable-read-only"},"Make a variable read-only"),(0,o.kt)("p",null,"As default, the values are editable. That means a user, who is assigned to this task, is able to see the entered value and overwrite it. To change it to \u201cread-only\u201d, you have to follow these steps:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Go to your BPMN model (for example, in the online editor)"),(0,o.kt)("li",{parentName:"ol"},"Open the XML view of your model"),(0,o.kt)("li",{parentName:"ol"},"Add this section below the field you would like to define as \u201cread-only\u201d and save it:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<camunda:validation>\n\xa0 <camunda:constraint name="readonly" />\n</camunda:validation>\n')),(0,o.kt)("p",null,"Example:"),(0,o.kt)("p",null,(0,o.kt)("img",{src:r(2337).Z})),(0,o.kt)("p",null,"In this example, the field named ",(0,o.kt)("inlineCode",{parentName:"p"},"f1")," is set to read only."))}u.isMDXComponent=!0},9254:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/form-deploy-6c9ffe2b33461c3679e2f996af3e2636.png"},2337:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/img-651c0ece82d6609d72bfacb5f3d3f833.png"}}]);